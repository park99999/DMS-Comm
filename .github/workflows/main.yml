name: CI/CD Bulletin Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy-bulletin:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./comm
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
         gradle-version: '8.11.1'
        
      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew :bulletin:build
        working-directory: ./comm

      # 4. Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker image
        run: |
          # Docker 이미지 빌드
          docker build -t park99999/bulletin:${{ github.sha }} comm/bulletin
          
          # 태그 지정 (latest)
          docker tag park99999/bulletin:${{ github.sha }} park99999/bulletin:latest
          
          # Docker Hub에 푸시
          docker push park99999/bulletin:${{ github.sha }}
          docker push park99999/bulletin:latest

      # 6. EC2에 배포
      - name: Deploy to EC2 Bulletin
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_BULLETIN }}
          username: ${{ secrets.EC2_USERNAME_BULLETIN }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop bulletin || true
            docker rm bulletin || true
            docker pull park99999/bulletin:latest
      
            docker run -d -p 80:8080 \
            --name bulletin \
            -v /host/path/to/spring-log:/spring-log \
            -e SPRING_DATASOURCE_URL=${{ secrets.MYSQL_URL }} \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.MYSQL_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            park99999/bulletin:latest

