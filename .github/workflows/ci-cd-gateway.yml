name: CI/CD Gateway Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy-gateway:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./comm
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
         gradle-version: '8.11.1'
        
      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew :gateway:build
        working-directory: ./comm

      # 4. Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker image
        run: |
          # Docker 이미지 빌드
          docker build -t park99999/gateway:${{ github.sha }} comm/gateway
          
          # 태그 지정 (latest)
          docker tag park99999/gateway:${{ github.sha }} park99999/gateway:latest
          
          # Docker Hub에 푸시
          docker push park99999/gateway:${{ github.sha }}
          docker push park99999/gateway:latest

      # 6. EC2에 배포
      - name: Deploy to EC2 Gateway
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_GATEWAY }}
          username: ${{ secrets.EC2_USERNAME_GATEWAY }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 기존 컨테이너 정지 및 삭제
            docker stop gateway || true
            docker rm gateway || true

            # 최신 이미지 풀
            docker pull park99999/gateway:latest

            # Docker 컨테이너 실행
            docker run -d -p 80:8080 \
              --name gateway \
              -v /host/path/to/spring-log:/spring-log \
              -e MYSQL_URL=${{ secrets.MYSQL_URL }} \
              -e MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }} \
              -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
              -e BULLETIN_IP=${{ secrets.BULLETIN_IP  }} \
              -e CHATTING_IP=${{  secrets.CHATTING_IP  }} \
              park99999/gateway:latest
            
